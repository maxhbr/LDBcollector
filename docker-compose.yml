version: '3.9'

services:
  db:
    image: postgres
    volumes:
      - db_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      hermine_net:
  django:
    build:
      context: .
    volumes:
      - static_volume:/opt/static
    environment:
      - DJANGO_PORT=8080
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SECRET=${HERMINE_SECRET:?err}
      - SUPERUSER=admin
      - PASSWORD=admin
      - HOST=${HERMINE_HOST:-localhost}
      - STATIC_ROOT=/opt/static
      - ENABLE_PROFILING=${HERMINE_PROFILING:-False}
      - PRODUCTION=${HERMINE_PRODUCTION:-True}
    links:
      - db
    networks:
      hermine_net:


  local_caddy:
    image: caddy
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - $PWD/docker/Caddyfile.localhost:/etc/caddy/Caddyfile
      - static_volume:/var/www/static
    environment:
      - PORT=${PORT:-8000}
    links:
      - django
    networks:
      hermine_net:
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    profiles: ["localhost"]


  web_https:
    image: caddy
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - $PWD/docker/Caddyfile:/etc/caddy/Caddyfile
      - static_volume:/var/www/static
    environment:
      - HOST=${HERMINE_HOST:-localhost}
      - DJANGO_PORT=8080
    links:
      - django
    networks:
      hermine_net:
    ports:
      - "443:443"
      - "80:80"
    profiles: ["https"]

networks:
  hermine_net:
volumes:
  db_volume:
  static_volume:
  caddy_data:
  caddy_config:

# Generated by Django 4.1.7 on 2023-03-29 15:52
from django.contrib.auth.management import create_permissions
from django.db import migrations

manage_products = [
    "view_product",
    "add_product",
    "change_product",
    "view_release",
    "add_release",
    "change_release",
]
release_components_and_usages = [
    "change_release_bom",
    "view_component",
    "add_component",
    "change_component",
    "view_version",
    "add_version",
    "change_version",
    "view_usage",
    "add_usage",
    "change_usage",
    "delete_usage",
    "view_exploitation",
    "add_exploitation",
    "change_exploitation",
    "view_licensecuration",
    "add_licensecuration",
    "change_licensecuration",
    "delete_licensecuration",
]

licenses_ro = [
    "view_license",
    "view_generic",
    "view_obligation",
]

groups = {
    "Project manager (install preset)": [
        *manage_products,
        *release_components_and_usages,
        *licenses_ro,
    ],
    "Legal (install preset)": [
        "view_license",
        "add_license",
        "change_license",
        "delete_license",
        "view_obligation",
        "add_obligation",
        "change_obligation",
        "delete_obligation",
        "view_generic",
        "add_generic",
        "change_generic",
        "delete_generic",
        "view_derogation",
        "add_derogation",
        "change_derogation",
        "delete_derogation",
    ],
    "Compliance officer (install preset)": [
        *manage_products,
        *release_components_and_usages,
        *licenses_ro,
        # Add curations choices and derogations
        "add_licensecuration",
        "change_licensecuration",
        "add_licensechoice",
        "change_licensechoice",
        "delete_licensechoice",
        "add_derogation",
        "change_derogation",
        "delete_derogation",
    ],
    "Guest (install preset)": [
        # RO on products
        "view_product",
        "view_release",
        "view_component",
        "view_version",
        "view_usage",
        *licenses_ro,
    ],
}


def create_default_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    app_config = apps.get_app_config("cube")
    app_config.models_module = True
    create_permissions(app_config, verbosity=0)
    app_config.models_module = None

    # Create the groups
    for goup_name, permissions in groups.items():
        group = Group.objects.create(name=goup_name)
        group.permissions.add(*Permission.objects.filter(codename__in=permissions))


class Migration(migrations.Migration):
    dependencies = [
        ("cube", "0039_alter_generic_options_alter_license_options_and_more"),
    ]

    operations = [
        migrations.RunPython(
            create_default_groups,
            migrations.RunPython.noop,
        )
    ]

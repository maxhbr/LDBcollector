# Generated by Django 4.1.7 on 2023-03-29 15:52

from django.db import migrations

manage_products = []

groups = {
    "Project manager (install preset)": [
        # Manage products
        "view_product",
        "add_product",
        "change_product",
        "view_release",
        "add_release",
        "change_release",
        # Release components and usages
        "change_release_bom",
        "view_component",
        "add_component",
        "change_component",
        "view_version",
        "add_version",
        "change_version",
        "view_usage",
        "add_usage",
        "change_usage",
        "delete_usage",
        "view_exploitation",
        "add_exploitation",
        "change_exploitation",
        "view_licensecuration",
        "add_licensecuration",
        "change_licensecuration",
        "delete_licensecuration",
        # RO on licenses
        "view_license",
    ],
    "Legal (install preset)": [
        "view_license",
        "add_license",
        "change_license",
        "delete_license",
        "view_licensederogation",
        "add_licensederogation",
        "change_licensederogation",
        "delete_licensederogation",
    ],
    "Compliance officer (install preset)": [
        # RO on products
        "view_product",
        "view_release",
        "view_component",
        "view_version",
        "view_usage",
        # Manage curations choices and derogations
        "view_licensecuration",
        "add_licensecuration",
        "change_licensecuration",
        "view_licensechoice",
        "add_licensechoice",
        "change_licensechoice",
        "view_licensederogation",
        "add_licensederogation",
        "change_licensederogation",
        "delete_licensederogation",
    ],
    "Guest (install preset)": [
        # RO on products
        "view_product",
        "view_release",
        "view_component",
        "view_version",
        "view_usage",
        # RO on licenses
        "view_license",
    ],
}


def create_default_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    # Create the groups
    for goup_name, permissions in groups.items():
        group = Group.objects.create(name=goup_name)
        group.permissions.add(*Permission.objects.filter(codename__in=permissions))


class Migration(migrations.Migration):

    dependencies = [
        ("cube", "0038_alter_product_options_alter_release_options_and_more"),
    ]

    operations = [
        migrations.RunPython(
            create_default_groups,
            migrations.RunPython.noop,
        )
    ]

# Generated by Django 3.0.5 on 2020-09-29 11:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('language', models.CharField(blank=True, max_length=200)),
                ('spdx_expression', models.CharField(blank=True, max_length=200)),
                ('homepage_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Generic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('in_base', models.BooleanField(default=False)),
                ('metacategory', models.CharField(blank=True, choices=[('Communication', 'Communication constraints'), ('IP management', 'IP management'), ('License Agreement', 'License Agreement'), ('Mentions', 'Mentions'), ('Providing source code', 'Providing source code'), ('Technical Constraints', 'Technical Constraints')], max_length=40)),
                ('lead', models.CharField(blank=True, choices=[('Legal', 'Legal'), ('DevQA', 'Dev/QA'), ('Communication', 'Marketing/Communication')], max_length=40)),
                ('obligation_type', models.CharField(blank=True, choices=[('Active', 'Active'), ('Passive', 'Passive')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spdx_id', models.CharField(max_length=200, unique=True)),
                ('status', models.CharField(choices=[('Checked', 'Qualifiee'), ('Pending', 'En cours'), ('To discuss', 'A discuter'), ('To check', 'A qualifier')], default='To check', max_length=20)),
                ('long_name', models.CharField(blank=True, max_length=200)),
                ('categories', models.CharField(blank=True, max_length=200)),
                ('license_version', models.CharField(blank=True, max_length=200)),
                ('radical', models.CharField(blank=True, max_length=200)),
                ('autoupgrade', models.BooleanField(null=True)),
                ('steward', models.CharField(blank=True, max_length=200)),
                ('copyleft', models.CharField(blank=True, choices=[('None', 'Persmissive'), ('Strong', 'Strong copyleft'), ('Weak', 'Weak copyleft'), ('Network', 'Strong network copyleft'), ('NetworkWeak', 'Weak network copyleft')], max_length=20)),
                ('color', models.CharField(choices=[('Green', 'White listed'), ('Red', 'Black listed'), ('Orange', 'It depends'), ('Grey', 'No reviewed yet')], default='Grey', max_length=20)),
                ('url', models.URLField(blank=True)),
                ('osi_approved', models.BooleanField(null=True)),
                ('fsf_approved', models.BooleanField(null=True)),
                ('foss', models.CharField(blank=True, choices=[('Yes', 'We consider it is FOSS'), ('Yes-Auto', 'FOSS - deduced'), ('No', 'We consider it is NOT FOSS'), ('No-Auto', 'NOT FOSS - deduced')], max_length=20)),
                ('patent_grant', models.BooleanField(null=True)),
                ('ethical_clause', models.BooleanField(null=True)),
                ('non_commmercial', models.BooleanField(null=True, verbose_name='Only non-commercial use')),
                ('legal_uncertainty', models.BooleanField(null=True)),
                ('non_tivoisation', models.BooleanField(null=True)),
                ('technical_nature_constraint', models.BooleanField(null=True)),
                ('jurisdictional_clause', models.CharField(blank=True, max_length=200)),
                ('comment', models.TextField(blank=True, max_length=1500)),
                ('verbatim', models.TextField(blank=True)),
                ('lectra', models.BooleanField(null=True)),
                ('inspiration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cube.License')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('pub_date', models.DateTimeField(blank=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_text', models.CharField(max_length=200)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cube.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.CharField(max_length=200)),
                ('declared_license', models.CharField(blank=True, max_length=200)),
                ('validated_spdx_license', models.CharField(blank=True, max_length=200)),
                ('purl', models.CharField(blank=True, max_length=250)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cube.Component')),
            ],
        ),
        migrations.CreateModel(
            name='Usage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Auto', 'Auto validated'), ('Unknown', 'Unknown'), ('Validated', 'Validated'), ('KO', 'Problem'), ('Fixed', 'Problem solved')], default='Unknown', max_length=20)),
                ('addition', models.CharField(blank=True, choices=[('Scan', 'Added by scan'), ('Manual', 'Added manualy')], max_length=20)),
                ('linking', models.CharField(blank=True, choices=[('Aggregat', 'Mere aggregation'), ('Dynamic', 'Dynamic Linking'), ('Static', 'Dynamic Linking'), ('Package', 'Package Manager'), ('Mingled', 'Source code directly derived')], max_length=20)),
                ('modified', models.BooleanField(null=True)),
                ('distribution', models.CharField(blank=True, choices=[('Distribution', 'Distribution source and object'), ('Distribution Source', 'Distribution - Source'), ('Distribution Non source', 'Distribution Non source'), ('Network access', 'Network access')], max_length=50)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('license_expression', models.CharField(blank=True, max_length=200)),
                ('licenses_chosen', models.ManyToManyField(to='cube.License')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cube.Release')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cube.Version')),
            ],
        ),
        migrations.CreateModel(
            name='Obligation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('verbatim', models.TextField(max_length=4000)),
                ('obligation_type', models.CharField(blank=True, choices=[('Active', 'Active'), ('Passive', 'Passive')], max_length=20)),
                ('trigger', models.CharField(blank=True, choices=[('Distribution', 'Distribution'), ('Distribution Source', 'Distribution - Source'), ('Distribution Non source', 'Distribution Non source'), ('Network access', 'Network access')], max_length=40)),
                ('trigger_mdf', models.CharField(choices=[('Modified', 'Only if modified'), ('Not Modified', 'Only if not modified'), ('Both', 'Modified or not')], default='Both', max_length=40)),
                ('generic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cube.Generic')),
                ('license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cube.License')),
            ],
        ),
        migrations.CreateModel(
            name='Compatibility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compatibility', models.CharField(choices=[('Compatible', 'Compatible'), ('Incompatible', 'Incompatible'), ('Explanation', 'See explanation')], default='Incompatible', max_length=40)),
                ('explanation', models.TextField(blank=True, max_length=500)),
                ('licensein', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licensein', to='cube.License')),
                ('licenseout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licenseout', to='cube.License')),
            ],
            options={
                'verbose_name_plural': 'Compatibilities',
            },
        ),
    ]

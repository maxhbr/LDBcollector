;
; Copyright Â© 2021 Peter Monks
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; SPDX-License-Identifier: Apache-2.0
;

(ns lice-comb.matching-test
  (:require [clojure.test               :refer [deftest testing is use-fixtures]]
            [lice-comb.test-boilerplate :refer [fixture]]
            [lice-comb.matching         :refer [unlisted? fuzzy-match-name->license-ids fuzzy-match-uri->license-ids]]))

(use-fixtures :once fixture)

(defn unlisted-only?
  "Does the given set of ids contain only a single unlisted license?"
  [ids]
  (and (= 1 (count ids))
       (unlisted? (first ids))))

; Note: these tests should be extended indefinitely, as it exercises the most-utilised part of the library (matching license names found in POMs)
(deftest fuzzy-match-name->license-ids-tests
  (testing "Nil, empty or blank names"
    (is (nil?                                      (fuzzy-match-name->license-ids nil)))
    (is (nil?                                      (fuzzy-match-name->license-ids "")))
    (is (nil?                                      (fuzzy-match-name->license-ids "       ")))
    (is (nil?                                      (fuzzy-match-name->license-ids "\n")))
    (is (nil?                                      (fuzzy-match-name->license-ids "\t"))))
  (testing "Names that are SPDX license ids"
    (is (= #{"AGPL-3.0"}                           (fuzzy-match-name->license-ids "AGPL-3.0")))
    (is (= #{"AGPL-3.0-only"}                      (fuzzy-match-name->license-ids "AGPL-3.0-only")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "    Apache-2.0        ")))   ; Test whitespace
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache-2.0")))
    (is (= #{"CC-BY-SA-4.0"}                       (fuzzy-match-name->license-ids "CC-BY-SA-4.0")))
    (is (= #{"GPL-2.0"}                            (fuzzy-match-name->license-ids "GPL-2.0")))
    (is (= #{"GPL-2.0-with-classpath-exception"}   (fuzzy-match-name->license-ids "GPL-2.0-with-classpath-exception"))))
  (testing "Names that are SPDX expressions"
    (is (= #{"GPL-2.0" "Classpath-exception-2.0"}  (fuzzy-match-name->license-ids "GPL-2.0 WITH Classpath-exception-2.0"))))
  (testing "Names"
    (is (= #{"AGPL-3.0"}                           (fuzzy-match-name->license-ids "GNU Affero General Public License (AGPL) version 3.0")))
    (is (= #{"AGPL-3.0"}                           (fuzzy-match-name->license-ids "GNU Affero General Public License v3.0")))
    (is (= #{"AGPL-3.0-only"}                      (fuzzy-match-name->license-ids "GNU Affero General Public License v3.0 only")))
    (is (= #{"Apache-1.0"}                         (fuzzy-match-name->license-ids "Apache Software License")))
    (is (= #{"Apache-1.0"}                         (fuzzy-match-name->license-ids "Apache License 1")))
    (is (= #{"Apache-1.0"}                         (fuzzy-match-name->license-ids "Apache License 1.0")))
    (is (= #{"Apache-1.0"}                         (fuzzy-match-name->license-ids "Apache License Version 1.0")))
    (is (= #{"Apache-1.0"}                         (fuzzy-match-name->license-ids "Apache License, Version 1.0")))
    (is (= #{"Apache-1.0"}                         (fuzzy-match-name->license-ids "Apache Software License - Version 1.0")))
    (is (= #{"Apache-1.1"}                         (fuzzy-match-name->license-ids "Apache License 1.1")))
    (is (= #{"Apache-1.1"}                         (fuzzy-match-name->license-ids "Apache License Version 1.1")))
    (is (= #{"Apache-1.1"}                         (fuzzy-match-name->license-ids "Apache License, Version 1.1")))
    (is (= #{"Apache-1.1"}                         (fuzzy-match-name->license-ids "Apache Software License - Version 1.1")))
    (is (= #{"Apache-1.1"}                         (fuzzy-match-name->license-ids "The MX4J License, version 1.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "               Apache Software License, Version 2.0             ")))   ; Test whitespace
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache 2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License, Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License - Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License 2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License Version 2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License v2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License v2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License, Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache v2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "The Apache Software License, Version 2.0")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "Bouncy Castle Licence")))  ; Note spelling of "licence"
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "3-Clause BSD License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD 3-Clause License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "The BSD 3-Clause License (BSD3)")))
    (is (= #{"BSD-3-Clause-Attribution"}           (fuzzy-match-name->license-ids "BSD 3-Clause Attribution")))
    (is (= #{"CC-BY-3.0"}                          (fuzzy-match-name->license-ids "Attribution 3.0 Unported")))
    (is (= #{"CC-BY-3.0"}                          (fuzzy-match-name->license-ids "Creative Commons Legal Code Attribution 3.0 Unported")))
    (is (= #{"CC-BY-4.0"}                          (fuzzy-match-name->license-ids "Attribution 4.0 International")))
    (is (= #{"CC-BY-SA-4.0"}                       (fuzzy-match-name->license-ids "Creative Commons Attribution Share Alike 4.0 International")))
    (is (= #{"CDDL-1.0"}                           (fuzzy-match-name->license-ids "COMMON DEVELOPMENT AND DISTRIBUTION LICENSE Version 1")))
    (is (= #{"CDDL-1.0"}                           (fuzzy-match-name->license-ids "COMMON DEVELOPMENT AND DISTRIBUTION LICENSE Version 1.0")))
    (is (= #{"CDDL-1.0"}                           (fuzzy-match-name->license-ids "COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0")))
    (is (= #{"CDDL-1.1"}                           (fuzzy-match-name->license-ids "COMMON DEVELOPMENT AND DISTRIBUTION LICENSE Version 1.1")))
    (is (= #{"CDDL-1.1"}                           (fuzzy-match-name->license-ids "COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.1")))
    (is (= #{"EPL-1.0"}                            (fuzzy-match-name->license-ids "Eclipse Public License")))
    (is (= #{"EPL-1.0"}                            (fuzzy-match-name->license-ids "Eclipse Public License (EPL)")))
    (is (= #{"EPL-1.0"}                            (fuzzy-match-name->license-ids "Eclipse Public License - v 1.0")))
    (is (= #{"EPL-1.0"}                            (fuzzy-match-name->license-ids "Eclipse Public License 1.0")))
    (is (= #{"EPL-1.0"}                            (fuzzy-match-name->license-ids "Eclipse Public License")))
    (is (= #{"EPL-1.0"}                            (fuzzy-match-name->license-ids "Eclipse Public License, Version 1.0")))
    (is (= #{"EPL-2.0"}                            (fuzzy-match-name->license-ids "Eclipse Public License 2.0")))
    (is (= #{"EPL-2.0"}                            (fuzzy-match-name->license-ids "Eclipse Public License version 2")))
    (is (= #{"GPL-2.0"}                            (fuzzy-match-name->license-ids "GNU General Public License, version 2")))
    (is (= #{"GPL-2.0-with-classpath-exception"}   (fuzzy-match-name->license-ids "GNU General Public License, version 2 (GPL2), with the classpath exception")))
    (is (= #{"GPL-2.0-with-classpath-exception"}   (fuzzy-match-name->license-ids "GNU General Public License, version 2 with the GNU Classpath Exception")))
    (is (= #{"GPL-2.0-with-classpath-exception"}   (fuzzy-match-name->license-ids "GNU General Public License v2.0 w/Classpath exception")))
    (is (= #{"JSON"}                               (fuzzy-match-name->license-ids "JSON License")))
    (is (= #{"LGPL-2.0"}                           (fuzzy-match-name->license-ids "GNU Library General Public License")))
    (is (= #{"LGPL-2.1"}                           (fuzzy-match-name->license-ids "GNU Lesser General Public License (LGPL)")))
    (is (= #{"LGPL-2.1"}                           (fuzzy-match-name->license-ids "GNU Lesser General Public License")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT License")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT license")))     ; Test capitalisation
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "The MIT License")))
    (is (= #{"MPL-1.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License Version 2.0")))
    (is (= #{"Plexus"}                             (fuzzy-match-name->license-ids "Similar to Apache License but with the acknowledgment clause removed"))))   ; JDOM - see https://lists.linuxfoundation.org/pipermail/spdx-legal/2014-December/001280.html
  (testing "Names that appear in POMs on Clojars"   ; as of 2023-07-13
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids " Apache License, Version 2.0")))
    (is (= #{"GPL-3.0"}                            (fuzzy-match-name->license-ids " GNU GENERAL PUBLIC LICENSE Version 3")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids " MIT License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "${license.id}")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "2-Clause BSD")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "2-Clause BSD License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "3-Clause BSD")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "3-Clause BSD License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "3-clause BSD licence (Revised BSD licence), also included in the jar file")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "3-clause BSD license")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "3-clause license (New BSD License or Modified BSD License)")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "<script lang=\"javascript\">alert('hi');</script>EPL-2.0 OR GPL-2.0-or-later WITH Classpath-exception-2.0")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "A Clojure library for Google Cloud Pub/Sub.")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "AGPL")))  ; Listed license missing version
    (is (= #{"AGPL-3.0"}                           (fuzzy-match-name->license-ids "AGPL v3")))
    (is (= #{"AGPL-3.0"}                           (fuzzy-match-name->license-ids "AGPLv3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "APACHE")))  ; Listed license missing version
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "APACHE LICENSE, VERSION 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "APACHE LICENSE, VERSION 2.0 (CURRENT)")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "APGL")))  ; Probable typo
    (is (= #{}                                     (fuzzy-match-name->license-ids "ASL")))  ; Listed license missing version
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "ASL 2.0")))
    (is (= #{"AFL-3.0"}                            (fuzzy-match-name->license-ids "Academic Free License 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Aduna BSD license")))  ; Listed license missing clause info
    (is (= #{}                                     (fuzzy-match-name->license-ids "Affero GNU Public License v3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Affero General Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Affero General Public License v3 or later (at your option)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Affero General Public License version 3 or lator")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Affero General Public License,")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "All Rights Reserved")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "All rights reserved")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Amazon Software License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Apache")))  ; Listed license missing clause info
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache 2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache 2 License")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache 2 Public License")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache 2, see LICENSE")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache 2.0 License")))
    (is (= #{"Apache-2.0" "LLVM-exception"}        (fuzzy-match-name->license-ids "Apache 2.0 with LLVM Exception")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Apache Licence")))  ; Listed license missing clause info
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Licence 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Licence, Version 2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Apache License")))  ; Listed license missing clause info
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License - Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License - v 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License - v2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License 2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License V2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License V2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License Version 2.0, January 2004")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License v 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License v2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License v2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License, 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License, Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License, Version 2.0.")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License, version 2.")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache License, version 2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Apache Public License")))  ; Listed license missing clause info
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Public License 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Public License v2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Public License, Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Public License, version 2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Apache Software License")))  ; Listed license missing clause info
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License - v 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Software License, Version 2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Apache Software Licesne")))  ; Listed license missing clause info
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Sofware Licencse 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Sofware License 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache V2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache V2 License")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache license version 2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache license, Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache v2")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache v2 License")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache v2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache, Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache-2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache-2.0 License")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "Apache2 License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Artistic License")))  ; Listed license missing version
    (is (= #{}                                     (fuzzy-match-name->license-ids "Artistic License/GPL")))  ; Listed license missing version
    (is (= #{"Artistic-2.0"}                       (fuzzy-match-name->license-ids "Artistic-2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Attribution-NonCommercial-NoDerivs 3.0 Unported")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "BSD")))  ; Listed license missing clause info
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD (2 Clause)")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD (2-Clause)")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD (Type 2) Public License")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD 2")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD 2 Clause")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD 2 clause license")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD 2-Clause")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD 2-Clause \"Simplified\" License")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD 2-Clause Licence")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD 2-Clause License")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD 2-Clause license")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD 2-clause \"Simplified\" License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD 3 Clause")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD 3-Clause")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD 3-Clause \"New\" or \"Revised\" License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD 3-Clause 'New' or 'Revised' License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD 3-Clause License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD 3-Clause license")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD 3-clause")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD 3-clause License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD 3-clause license")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD C2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "BSD License")))  ; Listed license missing clause info
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD New, Version 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "BSD Standard License")))  ; Listed license missing clause info
    (is (= #{}                                     (fuzzy-match-name->license-ids "BSD license")))  ; Listed license missing clause info
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "BSD-2-Clause")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD-3")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "BSD-3-Clause")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "BSD-style")))  ; Listed license missing clause info
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "BankersBox License")))
    (is (= #{"Beerware"}                           (fuzzy-match-name->license-ids "Beerware 42")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Bespoke")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Bloomberg Open API")))
    (is (= #{"BSL-1.0"}                            (fuzzy-match-name->license-ids "Boost Software License - Version 1.0")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Bostock")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Built In Project License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "CC Attribution 4.0 International with exception for binary distribution")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "CC BY-NC")))
    (is (= #{"CC-BY-SA-4.0"}                       (fuzzy-match-name->license-ids "CC BY-SA 4.0")))
    (is (= #{"CC-BY-4.0"}                          (fuzzy-match-name->license-ids "CC-BY-4.0")))
    (is (= #{"CC0-1.0"}                            (fuzzy-match-name->license-ids "CC0")))
    (is (= #{"CC0-1.0"}                            (fuzzy-match-name->license-ids "CC0 1.0 Universal")))
    (is (= #{"CC0-1.0"}                            (fuzzy-match-name->license-ids "CC0 1.0 Universal (CC0 1.0) Public Domain Dedication")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "CRAPL License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "CeCILL License")))   ; Listed license, but need a version
    (is (= #{}                                     (fuzzy-match-name->license-ids "Common Development and Distribution License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Common Development and Distribution License (CDDL)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Common Public License - v 1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Common Public License Version 1.0")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Contact JMonkeyEngine forums for license details")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright & all rights reserved Lean Pixel")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright (C) 2013 Mathieu Gauthron. Distributed under the Eclipse Public License.")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright (C) 2014 Mathieu Gauthron. Distributed under the Eclipse Public License.")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright (C) 2015 by Glowbox LLC")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright (c) 2011 Drew Colthorp")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright (c) 2017, Lingchao Xin")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright 2013 The Fresh Diet. All rights reserved.")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright 2016, klaraHealth, Inc.")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright 2017 All Rights Reserved")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright 2017 Zensight")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright 4A Volcano. 2015.")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright Ona Systems Inc.")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright meissa GmbH")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Copyright Â© SparX 2014")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Creative Commons 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Creative Commons Attribution 2.5 License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Creative Commons Attribution License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Creative Commons Attribution-NonCommercial 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Creative Commons Attribution-ShareAlike 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Creative Commons Attribution-ShareAlike 3.0 US (CC-SA)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Creative Commons Attribution-ShareAlike 3.0 US (CC-SA) license")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Creative Commons Attribution-ShareAlike 3.0 Unported")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Creative Commons Attribution-ShareAlike 3.0 Unported License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Custom")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Cydeas Public License")))
    (is (= #{"WTFPL"}                              (fuzzy-match-name->license-ids "DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE")))
    (is (= #{"WTFPL"}                              (fuzzy-match-name->license-ids "DO-WTF-U-WANT-2")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "Distributed under an MIT-style license (see LICENSE for details).")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Distributed under the Eclipse Public License, the same as Clojure.")))
    (is (= #{"WTFPL"}                              (fuzzy-match-name->license-ids "Do What The Fuck You Want To Public License")))
    (is (= #{"WTFPL"}                              (fuzzy-match-name->license-ids "Do What The Fuck You Want To Public License, Version 2")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Don't steal my stuff")))
    (is (= #{"Apache-2.0" "EPL-1.0"}               (fuzzy-match-name->license-ids "Double licensed under the Eclipse Public License (the same as Clojure) or the Apache Public License 2.0.")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Dropbox ToS")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Dual MIT & Proprietary")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Dual: EPL and LGPL")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "ECLIPSE PUBLIC LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPL")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPL 1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPL-1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPL-2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPL-2.0 OR GPL-2.0-or-later")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPL-2.0 OR GPL-2.0-or-later WITH Classpath Exception")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPL-2.0 OR GPL-2.0-or-later WITH Classpath-exception-2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPL-2.0 OR GPL-3.0-or-later")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPL-2.0 OR GPL-3.0-or-later WITH Classpath-exception-2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPL-v1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "EPLv2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public Licence")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License (EPL)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License (EPL) - v 1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License - Version 1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License - v 1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License - v 2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License - v1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License 1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License 1.0 (EPL-1.0)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License 2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License 2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License 2.0 OR GNU GPL v2+ with Classpath exception")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License 2.0,")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License v 1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License v1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License v2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License version 1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License version 2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License version 2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License, v. 2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License, v2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public License, version 1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public Licese - v 1.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Public MIT")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse Pulic License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Eclipse public license, the same as Clojure")))
    (is (= #{"EUPL-1.1"}                           (fuzzy-match-name->license-ids "European Union Public Licence (EUPL v.1.1)")))
    (is (= #{"EUPL-1.2"}                           (fuzzy-match-name->license-ids "European Union Public Licence v. 1.2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "European Union Public License")))
    (is (= #{"EUPL-1.2"}                           (fuzzy-match-name->license-ids "European Union Public License 1.2 or later")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "Expat (MIT) license")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "FIXME: choose")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Firebase ToS")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "FreeBSD License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "GG Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU AFFERO GENERAL PUBLIC LICENSE Version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU AFFERO GENERAL PUBLIC LICENSE, Version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU AGPL-V3 or later")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU AGPLv3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Affero General Public Licence")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Affero General Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Affero General Public License (AGPL)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Affero General Public License 3.0 (AGPL-3.0)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Affero General Public License Version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Affero General Public License Version 3; Other commercial licenses available.")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Affero General Public License v3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Affero General Public License v3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Affero General Public License, Version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Affero General Public License, version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GENERAL PUBLIC LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GENERAL PUBLIC LICENSE Version 2, June 1991")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GPL")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GPL 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GPL V2+")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GPL v 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GPL v. 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GPL v3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GPL v3+")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GPL v3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GPL, version 3, 29 June 2007")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU GPLv3+")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Lesser Public License (LGPL) version 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License (GPL)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License 2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License V3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License Version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License v3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License v3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License v3.0 or later")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License, Version 2, with the Classpath Exception")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License, Version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License, Version 3 (or later)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License, version 2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License, version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License, version 3 (GPLv3)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU General Public License,version 2.0 or (at your option) any later version")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU LESSER GENERAL PUBLIC LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU LESSER GENERAL PUBLIC LICENSE - Version 2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU LESSER GENERAL PUBLIC LICENSE Version 2.1, February 1999")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU LESSER GENERAL PUBLIC LICENSE, Version 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU LGPL 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU LGPL v2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU LGPL v3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU LGPL version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU LGPL-3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU LGPLv3 ")))  ; Note trailing space
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser GPL")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public Licence")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public Licence 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License (LGPL)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License (LGPL) Version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License - v 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License - v 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License - v3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License 2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License v2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License v3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License version 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License, Version 2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License, Version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License, Version 3 or later")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License, v. 3 or later")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License, version 2.1 or newer")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License, version 3 or later")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Public License, version 3.0 or (at your option) any later version")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser General Pulic License v2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser Genereal Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Lesser Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Library or Lesser General Public License (LGPL)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Library or Lesser General Public License (LGPL) 2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Library or Lesser General Public License (LGPL) V2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Public License V. 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Public License V3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Public License v2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Public License, Version 2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Public License, Version 2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU Public License, v2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNU public licence V3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GNUv3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL 2.0+")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL V3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL V3+")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL v2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL v2+ or Swiss Ephemeris")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL v3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL version 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL-2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL-2.0-or-later WITH Classpath-exception-2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL-3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL-3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL-3.0-only")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPL3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPLv2")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPLv2 with Classpath exception")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "GPLv3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "General Public License 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "General Public License v3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Gnu Lesser Public License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Google Maps ToS")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "GraphiQL license")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Hackthorn Innovation Ltd")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Hackthorn Innovation copyright")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Heap ToS")))
    (is (= #{"Hippocratic-2.1"}                    (fuzzy-match-name->license-ids "Hippocratic License")))
    (is (= #{"ISC"}                                (fuzzy-match-name->license-ids "ISC")))
    (is (= #{"ISC"}                                (fuzzy-match-name->license-ids "ISC Licence")))
    (is (= #{"ISC"}                                (fuzzy-match-name->license-ids "ISC License")))
    (is (= #{"ISC" "Classpath-exception-2.0"}      (fuzzy-match-name->license-ids "ISC WITH Classpath-exception-2.0")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Interel")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "JLGL Backend")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Jedis License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Jiegao Owned")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "L GPL 3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL 2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL 3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL 3.0 (GNU Lesser General Public License)")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL Open Source license")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL v3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL-2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL-2.1-only")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL-3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL-3.0-only")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPL-3.0-or-later")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPLv2.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPLv3")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "LGPLv3+")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Lesser GPL")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Lesser General Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Lesser General Public License (LGPL)")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Libre Uso MX")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "License of respective package")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Licensed under GNU Lesser General Public License Version 3 or later (the ")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Like Clojure.")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT LICENSE")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT Licence")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT Licens")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT License")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT License (MIT)")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT Public License")))
    (is (= #{"X11"}                                (fuzzy-match-name->license-ids "MIT X11 License")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT license")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT public License")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT public license")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "MIT-style license (see LICENSE for details).")))
    (is (= #{"MIT" "Apache-2.0" "BSD-3-Clause"}    (fuzzy-match-name->license-ids "MIT/Apache-2.0/BSD-3-Clause")))
    (is (= #{"ISC"}                                (fuzzy-match-name->license-ids "MIT/ISC")))
    (is (= #{"ISC"}                                (fuzzy-match-name->license-ids "MIT/ISC License")))
    (is (= #{"X11"}                                (fuzzy-match-name->license-ids "MIT/X11")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "MPL")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "MPL 2")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "MPL 2.0")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "MPL v2")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "MPL-2.0")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "MPL-v2.0")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "MPL2.0")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Mixed")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Modified BSD License")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public Licence 2.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Mozilla Public License")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License (Version 2.0)")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License 2.0")))
    (is (= #{"MPL-1.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License Version 1.0")))
    (is (= #{"MPL-1.1"}                            (fuzzy-match-name->license-ids "Mozilla Public License Version 1.1")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License Version 2.0")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License v2.0")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License v2.0+")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License version 2")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License version 2.0")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License, v. 2.0")))
    (is (= #{"MPL-2.0"}                            (fuzzy-match-name->license-ids "Mozilla Public License, version 2.0")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Multiple")))
    (is (= #{"NASA-1.3"}                           (fuzzy-match-name->license-ids "NASA OPEN SOURCE AGREEMENT VERSION 1.3")))
    (is (= #{"NASA-1.3"}                           (fuzzy-match-name->license-ids "NASA Open Source Agreement, Version 1.3")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "New BSD 2-clause license")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "New BSD License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "New BSD License or Modified BSD License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "New BSD license")))
    (is (= #{"BSD-3-Clause" "MIT"}                 (fuzzy-match-name->license-ids "New-BSD / MIT")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Not fit for public use so formally proprietary software - this is not open-source")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "OTN License Agreement")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Open Source Community License - Type C version 1.0")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Other License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Private")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Private License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Proprietary")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Proprietary License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Proprietory. Copyright Jayaraj Poroor. All Rights Reserved.")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Provisdom")))
    (is (= #{"LicenseRef-lice-comb-PUBLIC-DOMAIN"} (fuzzy-match-name->license-ids "Public Domain")))
    (is (= #{"CC0"}                                (fuzzy-match-name->license-ids "Public domain (CC0)")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Research License 1.0")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Restricted Distribution.")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Revised BSD")))
    (is (= #{"Ruby"}                               (fuzzy-match-name->license-ids "Ruby License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "SGI")))
    (is (= #{"SMPPL"}                              (fuzzy-match-name->license-ids "SMPPL")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "SYNNEX China Owned")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "See the LICENSE file")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Shen License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Simplified BSD License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Simplified BSD license")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Slick2D License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "Some Eclipse Public License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Stripe ToS")))
    (is (= #{"Beerware"}                           (fuzzy-match-name->license-ids "THE BEER-WARE LICENSE")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "THE MIT LICENSE")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "TODO")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "TODO: Choose a license")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "The 3-Clause BSD License")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "The Apache 2 License")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "The Apache License, Version 2.0")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "The Apache Software License, Version 2.0")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "The BSD 2-Clause License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "The BSD 3-Clause License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "The BSD License")))
    (is (= #{"EUPL-1.1"}                           (fuzzy-match-name->license-ids "The European Union Public License, Version 1.1")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "The GNU General Public License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "The GNU General Public License v3.0")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "The GNU General Public License, Version 2")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "The I Haven't Got Around To This Yet License")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "The MIT Licence")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "The MIT License")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "The MIT License (MIT)")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "The MIT License (MIT) ")))  ; Note trailing space
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "The MIT License (MIT) | Open Source Initiative")))
    (is (= #{"MIT"}                                (fuzzy-match-name->license-ids "The MIT License.")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "The New BSD License")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "The New BSD license")))
    (is (= #{"Unlicense"}                          (fuzzy-match-name->license-ids "The UnLicense")))
    (is (= #{"Unlicense"}                          (fuzzy-match-name->license-ids "The Unlicence")))
    (is (= #{"Unlicense"}                          (fuzzy-match-name->license-ids "The Unlicense")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "Three Clause BSD-like License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "To ill!")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Tulos Commercial License")))
    (is (= #{"BSD-2-Clause"}                       (fuzzy-match-name->license-ids "Two clause BSD license")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "UNLICENSED")))
    (is (= #{"Unlicense"}                          (fuzzy-match-name->license-ids "UnLicense")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "University of Buffalo Public License")))
    (is (= #{"NCSA"}                               (fuzzy-match-name->license-ids "University of Illinois/NCSA Open Source License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Unknown")))
    (is (= #{"Unlicense"}                          (fuzzy-match-name->license-ids "Unlicense")))
    (is (= #{"Unlicense"}                          (fuzzy-match-name->license-ids "Unlicense License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "VNETLPL - Limited Public License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "VNet PL")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Various")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Vimeo License")))
    (is (= #{"W3C"}                                (fuzzy-match-name->license-ids "W3C Software license")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "WIP")))
    (is (= #{"WTFPL"}                              (fuzzy-match-name->license-ids "WTFPL")))
    (is (= #{"WTFPL"}                              (fuzzy-match-name->license-ids "WTFPL v2")))
    (is (= #{"WTFPL"}                              (fuzzy-match-name->license-ids "WTFPL â Do What the Fuck You Want to Public License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "Wildbit Proprietary License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "YouTube ToS")))
    (is (= #{"Zlib"}                               (fuzzy-match-name->license-ids "Zlib License")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "apache")))
    (is (= #{"Apache-2.0"}                         (fuzzy-match-name->license-ids "apache-2.0")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "avi license")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "esl-sdk-external-signer-verification")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "http://opensource.org/licenses/MIT")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/clanhr/clanhr-service/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/cmiles74/uio/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/jaycfields/jry/blob/master/README.md#license")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/mixradio/clafka/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/mixradio/faraday-atom/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/mixradio/graphite-filter/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/mixradio/instrumented-ring-jetty-adapter/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/mixradio/mr-clojure/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/mixradio/mr-edda/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/mixradio/multi-atom/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/mixradio/party/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/mixradio/radix/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/riverford/datagrep/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/riverford/durable-ref/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://github.com/smsharman/sxm-clojure-ms/blob/master/LICENSE")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "https://opensource.org/licenses/BSD-3-Clause")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "jank license")))
    (is (= #{}                                     (fuzzy-match-name->license-ids "lgpl_v2_1")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "name")))
    (is (= #{"BSD-3-Clause"}                       (fuzzy-match-name->license-ids "new BSD License")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "none")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "proprietary")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "state-node license")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "trove")))
    (is (= #{"Unlicense"}                          (fuzzy-match-name->license-ids "unlicense")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "url")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "wisdragon")))
    (is (unlisted-only?                            (fuzzy-match-name->license-ids "wiseloong")))
    (is (= #{"Zlib"}                               (fuzzy-match-name->license-ids "zlib License")))
    (is (= #{"Zlib"}                               (fuzzy-match-name->license-ids "zlib license")))
    (is (= #{"Libpng"}                             (fuzzy-match-name->license-ids "zlib/libpng License"))))
  (testing "Names that appear in licensey things, but are ambiguous"
    (is (nil?                                      (fuzzy-match-name->license-ids "BSD"))))
  (testing "Names that appear in licensey things, but aren't in the SPDX license list"
    (is (= #{"LicenseRef-lice-comb-PUBLIC-DOMAIN"} (fuzzy-match-name->license-ids "Public Domain")))
    (is (= #{"LicenseRef-lice-comb-PUBLIC-DOMAIN"} (fuzzy-match-name->license-ids "Public domain")))))

(deftest uri->license-ids-tests
  (testing "Nil, empty or blank uri"
    (is (nil?                                                (fuzzy-match-uri->license-ids nil)))
    (is (nil?                                                (fuzzy-match-uri->license-ids "")))
    (is (nil?                                                (fuzzy-match-uri->license-ids "       ")))
    (is (nil?                                                (fuzzy-match-uri->license-ids "\n")))
    (is (nil?                                                (fuzzy-match-uri->license-ids "\t"))))
  (testing "URIs that appear verbatim in the SPDX license list"
    (is (= #{"Apache-2.0"}                                   (fuzzy-match-uri->license-ids "http://www.apache.org/licenses/LICENSE-2.0.html")))
    (is (= #{"Apache-2.0"}                                   (fuzzy-match-uri->license-ids "               http://www.apache.org/licenses/LICENSE-2.0.html             ")))   ; Test whitespace
    (is (= #{"AGPL-3.0-or-later" "AGPL-3.0-only" "AGPL-3.0"} (fuzzy-match-uri->license-ids "https://www.gnu.org/licenses/agpl.txt")))
    (is (= #{"CC-BY-SA-4.0"}                                 (fuzzy-match-uri->license-ids "https://creativecommons.org/licenses/by-sa/4.0/legalcode")))
    (is (= #{"GPL-2.0-with-classpath-exception"}             (fuzzy-match-uri->license-ids "https://www.gnu.org/software/classpath/license.html"))))
  (testing "URI variations that should be handled identically"
    (is (= #{"Apache-2.0"}                                   (fuzzy-match-uri->license-ids "https://www.apache.org/licenses/LICENSE-2.0.html")))
    (is (= #{"Apache-2.0"}                                   (fuzzy-match-uri->license-ids "http://www.apache.org/licenses/LICENSE-2.0.html")))
    (is (= #{"Apache-2.0"}                                   (fuzzy-match-uri->license-ids "https://www.apache.org/licenses/LICENSE-2.0.txt")))
    (is (= #{"Apache-2.0"}                                   (fuzzy-match-uri->license-ids "http://apache.org/licenses/LICENSE-2.0.pdf"))))
  (testing "URIs that appear in licensey things, but aren't in the SPDX license list"
    (is (= #{"Apache-2.0"}                                   (fuzzy-match-uri->license-ids "http://www.apache.org/licenses/LICENSE-2.0")))
    (is (= #{"Apache-2.0"}                                   (fuzzy-match-uri->license-ids "https://www.apache.org/licenses/LICENSE-2.0.txt")))))

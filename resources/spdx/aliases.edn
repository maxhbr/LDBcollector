; Important note: we can't use regexes as map keys as they don't implement equality / hash ðŸ™„
; Instead we use the string representation, and compile-on-demand+memoize

; Note escaping of \, as these are string, not regex, literals
{
  "apache(\\s+software)?(\\s+license(s)?(,)?)?(\\s+v)?\\s*1(\\.0)?"                                         #{"Apache-1.0"}
  "apache(\\s+software)?(\\s+license(s)?(,)?)?(\\s+v)?\\s*1(\\.1)?"                                         #{"Apache-1.1"}
  "apache(\\s+software)?(\\s+license(s)?(,)?)?(\\s+v)?\\s*2(\\.0)?"                                         #{"Apache-2.0"}
  "apache(\\s+software)?(\\s+license(s)?(,)?)?(\\s+version)? 1\\.0"                                         #{"Apache-1.0"}
  "apache(\\s+software)?(\\s+license(s)?(,)?)?(\\s+version)? 1\\.1"                                         #{"Apache-1.1"}
  "apache(\\s+software)?(\\s+license(s)?(,)?)?(\\s+version)? 2(\\.0|\\s+|\\z)"                              #{"Apache-2.0"}
  "apache(\\s+software)?(\\s+license(s)?)?"                                                                 #{"Apache-1.0"}   ; Assume earliest version
  "cddl/gplv2\\+ce"                                                                                         #{"CDDL-1.0" "GPL-2.0-with-classpath-exception"}
  "cddl\\+gpl\\s+license"                                                                                   #{"CDDL-1.0" "GPL-2.0"}
  "cddl\\s+1(\\.0)?\\+gpl\\s+license"                                                                       #{"CDDL-1.1" "GPL-2.0"}
  "cddl\\s+1\\.1\\+gpl\\s+license"                                                                          #{"CDDL-1.1" "GPL-2.0"}
  "cddl\\s+\\+\\s+gpl\\s*v2\\s+with\\s+classpath\\s+exception"                                              #{"CDDL-1.0" "GPL-2.0-with-classpath-exception"}
  "common\\s+development\\s+and\\s+distribution\\s+license\\s+\\(cddl\\)\\s+version\\s+1(\\.0|\\s+|\\z)"    #{"CDDL-1.0"}
  "common\\s+development\\s+and\\s+distribution\\s+license\\s+\\(cddl\\)\\s+version\\s+1\\.1"               #{"CDDL-1.1"}
  "copyright(\\s+\\(c\\)|Â©)?\\s+2011\\s+matthew\\s+lee\\s+hinman"                                           #{"MIT"}
  "copyright\\s+\\(c\\)\\s+2000-2012\\s+jason\\s+hunter\\s+\\&\\s+brett\\s+mclaughlin"                      #{"NON-SPDX-JDOM"}            ; Note: not an SPDX license
  "creative\\s+commons\\s+attribution-sharealike\\s+4\\.0\\s+international\\s+public\\s+license"            #{"CC-BY-SA-4.0"}
  "cup\\s+parser\\s+generator\\s+copyright\\s+notice,\\s+license,\\s+and\\s+disclaimer"                     #{"MIT"}          ; See https://www.apache.org/legal/resolved.html#category-a
  "do\\s+what\\s+the\\s+fuck\\s+you\\s+want\\s+to\\s+public\\s+license"                                     #{"WTFPL"}
  "dual\\s+license\\s+consisting\\s+of\\s+the\\s+cddl\\s+v1(\\.0)?\\s+and\\s+gpl\\s+v2"                     #{"CDDL-1.0" "GPL-2.0"}
  "dual\\s+license\\s+consisting\\s+of\\s+the\\s+cddl\\s+v1\\.1\\s+and\\s+gpl\\s+v2"                        #{"CDDL-1.1" "GPL-2.0"}
  "eclipse\\s+distribution\\s+license\\s+-\\s+v\\s+1\\.0"                                                   #{"BSD-3-Clause"} ; See https://wiki.spdx.org/view/Legal_Team/License_List/Licenses_Under_Consideration#Processed_License_Requests
  "eclipse\\s+public\\s+license"                                                                            #{"EPL-1.0"}      ; Assume earliest version
  "eclipse\\s+public\\s+license\\s*-\\s*v\\s*1(\\.0|\\s+|\\z)"                                              #{"EPL-1.0"}
  "eclipse\\s+public\\s+license\\s*-\\s*v\\s*1\\.1"                                                         #{"EPL-1.1"}
  "eclipse\\s+public\\s+license\\s*-\\s*v\\s*2(\\.0|\\s+|\\z)"                                              #{"EPL-2.0"}
  "gnu\\s+affero\\s+general\\s+public\\s+license"                                                           #{"AGPL-3.0"}     ; Assume earliest version
  "gnu\\s+affero\\s+general\\s+public\\s+license\\s+version\\s+3"                                           #{"AGPL-3.0"}
  "gnu\\s+general\\s+public\\s+license\\s+version"                                                          #{"GPL-1.0"}      ; Assume earliest version
  "gnu\\s+general\\s+public\\s+license\\s+version\\s+1"                                                     #{"GPL-1.0"}
  "gnu\\s+general\\s+public\\s+license\\s+version\\s+2"                                                     #{"GPL-2.0"}
  "gnu\\s+general\\s+public\\s+license\\s+version\\s+3"                                                     #{"GPL-3.0"}
  "gnu\\s+lesser\\s+general\\s+public\\s+license\\s+version"                                                #{"LGPL-2.1"}     ; Assume earliest version (note: "lesser" didn't appear until v2.1 - it was "library before that")
  "gnu\\s+lesser\\s+general\\s+public\\s+license\\s+version\\s+2\\.1"                                       #{"LGPL-2.1"}
  "gnu\\s+lesser\\s+general\\s+public\\s+license\\s+version\\s+3"                                           #{"LGPL-3.0"}
  "gnu\\s+library\\s+general\\s+public\\s+license\\s+version(\\s+2)?"                                       #{"LGPL-2.0"}
  "lesser\\s+general\\s+public\\s+license(,)?\\s+version\\s+3\\s+or\\s+greater"                             #{"LGPL-3.0"}
  "public\\s+domain"                                                                                        #{"NON-SPDX-Public-Domain"}   ; Note: not an SPDX license
  "similar\\s+to\\s+apache\\s+license\\s+but\\s+with\\s+the\\s+acknowledgment\\s+clause\\s+removed"         #{"NON-SPDX-JDOM"}            ; Note: not an SPDX license
  "the\\s+mx4j\\s+license(,)?\\s+version\\s+1\\.0"                                                          #{"Apache-1.1"}   ; See https://wiki.spdx.org/view/Legal_Team/License_List/Licenses_Under_Consideration#Processed_License_Requests
  "this\\s+is\\s+free\\s+and\\s+unencumbered\\s+software\\s+released\\s+into\\s+the\\s+public\\s+domain\\." #{"Unlicense"}
}


    Copyright © 1996, David Mazieres <dm@uun.org>
    Copyright © 2008, Damien Miller <djm@openbsd.org>

    Permission to use, copy, modify, and distribute this software for any
    purpose with or without fee is hereby granted, provided that the above
    copyright notice and this permission notice appear in all copies.

    Modification and redistribution in source and binary forms is
    permitted provided that due credit is given to the author and the
    OpenBSD project (for instance by leaving this copyright notice
    intact).

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

    This code is derived from section 17.1 of Applied Cryptography,
    second edition, which describes a stream cipher allegedly
    compatible with RSA Labs "RC4" cipher (the actual description of
    which is a trade secret).  The same algorithm is used as a stream
    cipher called "arcfour" in Tatu Ylonen's ssh package.

    Here the stream cipher has been modified always to include the time
    when initializing the state.  That makes it impossible to
    regenerate the same random sequence twice, so this can't be used
    for encryption, but will generate good random numbers.

    RC4 is a registered trademark of RSA Laboratories.

    --

    This code implements the MD5 message-digest algorithm.
    The algorithm is due to Ron Rivest. This code was
    written by Colin Plumb in 1993, no copyright is claimed.
    This code is in the public domain; do with it what you wish.

    Equivalent code is available from RSA Data Security, Inc.
    This code has been tested against that, and is equivalent,
    except that you don't need to include two pages of legalese
    with every copy.

    To compute the message digest of a chunk of bytes, declare an
    MD5Context structure, pass it to MD5Init, call MD5Update as
    needed on buffers full of bytes, and then call MD5Final, which
    will fill a supplied 16-byte array with the digest.

    --

    "THE BEER-WARE LICENSE" (Revision 42):
    <phk@login.dkuug.dk> wrote this file.  As long as you retain this notice you
    can do whatever you want with this stuff. If we meet some day, and you think
    this stuff is worth it, you can buy me a beer in return.   Poul-Henning Kamp


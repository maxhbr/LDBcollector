FONTLOG for Cantarell GNOME 0.0.5
=================================

This file provides detailed information on the Cantarell font
software. This information should be distributed along with the
Cantarell fonts and any derivative works.

Font Information
-------------------------

The Cantarell typeface family is a contemporary Humanist 
sans serif, and is used by the GNOME project for its user
interface and the Fedora project. 

Cantarell was originally designed by Dave Crossland as part 
of his coursework for the MA Typeface Design programme at 
the Department of Typography in the University of Reading, 
England. [1] 

Dave was motivated to undertake a study of typeface design because
he believes it is essential that when we use digital tools, our
freedom to use, understand, modify and share these tools is 
respected. Otherwise, when the tool does not work in the way 
that we need, we will be unable to fix it.

These fonts are developed using only such "libre" software, 
mainly FontForge [2]. 

Cantarell was originally aimed at on-screen reading in a specific 
use-case and environment: reading web pages on an HTC Dream 
mobile phone [3].

That device was the first to ship with Google Android [4], and 
came installed with a web browser that supported the exciting web 
fonts feature known as @font-face [5]. As Dave's very first typeface 
design, the typeface has many faults, yet he asserts it achieves 
his goal of improving readability on this device.

The regular member of the family has had recieved the most focus, and a bold
family has been developed quickly to provide better somewhat better results
that an operating system's automatic bolding. In the case of oblique, we
decided to rely on the system generated variant for now. An actual italics
variant is planned.

The Regular font fully supports the following writing systems: 
Basic Latin, Western European, Catalan, Baltic, Turkish, Central 
European, Dutch and Afrikaans. To date, Pan African Latin has 
only 33% glyph coverage.

Since the design is aimed at display on-screen at small sizes, the
printed output (especially of the bold and oblique) may not work
well. Fonts tuned to the needs of printing will be developed in 
the future.

The fonts were initially published on the 6th of July 2009 on
Dave Crossland's foundry website [6] under the terms of the GNU
General Public License version 3. [7] In May 2010 the fonts were 
republished through Google Web Fonts [8] under the terms of the
SIL Open Font License version 1.1. [9] In November 2010 the
project became part of the GNOME project and is now under active
development by the GNOME design community. [10]

Dave Crossland, 21st March 2011

[1]: http://www.typedesign.reading.ac.uk
[2]: http://fontforge.sf.net
[3]: http://en.wikipedia.org/wiki/HTC_Dream
[4]: http://en.wikipedia.org/wiki/Android_%28operating_system%29
[5]: http://openfontlibrary.org/wiki/Web_font_linking_with_%40font-face
[6]: http://abattis.org/cantarell
[7]: http://www.gnu.org/licenses/gpl.html
[8]: http://www.google.com/webfonts
[9]: http://scripts.sil.org/OFL
[10]: http://live.gnome.org/CantarellFonts

                                  * * * 

Developer information
---------------------

The original src/Cantarell-Regular.sfd file has the master sources 
as Cubic (PostScript) Bezier splines. There are temporary layers 
and a 'Spiro' layer in this file, containing forms used to create 
the master Cubic Bezier glyphs; the Spiro layer contains forms in 
Spiro splines, and much of the original typeface design by Dave
Crossland was done by drawing in Spiro splines. However today the
master drawing spline format is Cubic Bezier, and Spiro splines
are used to inform their creation. 

The Cantarell-Regular.sfd file is the _master_ source, and was 
used to generate the Cantarell-Bold.sfd which is now a hard fork. 

All development occurs by making changes to these drawing files. 
When OTF or TTF binaries are compiled, they are copied to the 
Cantarell-*-OTF.sfd and Cantarell-*-TTF.sfd files and then a 
build process applied. 

This means that there should be a 1:1 match between these files, 
the OTF and TTF files in the otf/ and ttf/ directories, and the
output of generating new OTF and TTF files from FontForge. 

The build process is simple; the Spiro and temp layers are removed, 
in the case of TTF files all layers are converted to Quadratic from
Cubic, and then all glyphs have the Simplify, Add Extrema, Round 
to Int, and Correct Direction operations applied. 

In the future a build script will be developed to do this in an
automated way, which will be important for adding OpenType 
Layout features through a feature.fea file. 
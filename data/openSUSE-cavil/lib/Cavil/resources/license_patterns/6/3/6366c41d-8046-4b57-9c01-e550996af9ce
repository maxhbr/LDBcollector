{"export_restricted":0,"license":"LGPL Unspecified","packname":"gstreamer","patent":0,"pattern":"title>Licensing advisory<\/title>\n  <sect1 id=\"section-application-licensing\">\n  <title>How to license the applications you build with <application>GStreamer<\/application><\/title>\n<para>\nThe licensing of GStreamer is no different from a lot of other libraries \nout there like GTK+ or glibc: we use the LGPL. What complicates things \nwith regards to GStreamer is its plugin-based design and the heavily \npatented and proprietary nature of many multimedia codecs. While patents \non software are currently only allowed in a small minority of world \ncountries (the US and Australia being the most important of those), the \nproblem is that due to the central place the US hold in the world economy \nand the computing industry, software patents are hard to ignore wherever \nyou are.\n\nDue to this situation, many companies, including major GNU\/Linux \ndistributions, get trapped in a situation where they either get bad \nreviews due to lacking out-of-the-box media playback capabilities (and \nattempts to educate the reviewers have met with little success so far), or \ngo against their own - and the free software movement's - wish to avoid \nproprietary software. Due to competitive pressure, most choose to add some \nsupport. Doing that through pure free software solutions would have them \nrisk heavy litigation and punishment from patent owners. So when the \ndecision is made to include support for patented codecs, it leaves them \nthe choice of either using special proprietary applications, or try to \nintegrate the support for these codecs through proprietary plugins into \nthe multimedia infrastructure provided by GStreamer. Faced with one of \nthese two evils the GStreamer community of course prefer the second option.\n<\/para>\n<para>\nThe problem which arises is that most free software and open source \napplications developed use the GPL as their license. While this is \ngenerally a good thing, it creates a dilemma for people who want to put \ntogether a distribution. The dilemma they face is that if they include \nproprietary plugins in GStreamer to support patented formats in a way that \nis legal for them, they do risk running afoul of the GPL license of the \napplications. We have gotten some conflicting reports from lawyers on \nwhether this is actually a problem, but the official stance of the FSF is \nthat it is a problem. We view the FSF as an authority on this matter, so \nwe are inclined to follow their interpretation of the GPL license.\n<\/para>\n<para>\nSo what does this mean for you as an application developer? Well, it means \nyou have to make an active decision on whether you want your application \nto be used together with proprietary plugins or not. What you decide here \nwill also influence the chances of commercial distributions and Unix \nvendors shipping your application. The GStreamer community suggest you \nlicense your software using a license that will allow proprietary plugins \nto be bundled with GStreamer and your applications, in order to make sure \nthat as many vendors as possible go with GStreamer instead of less free \nsolutions. This in turn we hope and think will let GStreamer be a vehicle \nfor wider use of free formats like the Xiph.org formats.\n<\/para>\n<para>\nIf you do decide that you want to allow for non-free plugins to be used \nwith your application you have a variety of choices. One of the simplest \nis using licenses like LGPL, MPL or BSD for your application instead of \nthe GPL. Or you can add an exception clause to your GPL license stating \nthat you except GStreamer plugins from the obligations of the GPL.\n<\/para>\n<para>\nA good example of such a GPL exception clause would be, using the\nTotem video player project as an example:\nThe authors of the Totem video player project hereby grants permission \nfor non-GPL-compatible GStreamer plugins to be used and distributed \ntogether with GStreamer and Totem. This permission goes above and beyond \nthe permissions granted by the GPL license Totem is covered by.\n<\/para>\n<para>\nOur suggestion among these choices is to use the LGPL license, as it is \nwhat resembles the GPL most and it makes it a good licensing fit with the \nmajor GNU\/Linux desktop projects like GNOME and KDE. It also allows you to \nshare code more openly with projects that have compatible licenses. \nObviously, pure GPL code without the above-mentioned clause is not usable \nin your application as such. By choosing the LGPL, there is no need for an \nexception clause and thus code can be shared more freely.\n<\/para>\n<para>\nI have above outlined the practical reasons for why the GStreamer \ncommunity suggests you allow non-free plugins to be used with your \napplications. We feel that in the multimedia arena, the free software \ncommunity is still not strong enough to set the agenda and that blocking \nnon-free plugins to be used in our infrastructure hurts us more than it \nhurts the patent owners and their ilk.\n<\/para>\n<para>\nThis view is not shared by everyone. The Free Software Foundation urges \nyou to use an unmodified GPL for your applications, so as to push back \nagainst the temptation to use non-free plug-ins. They say that since not \neveryone else has the strength to reject them because they are unethical, \nthey ask your help to give them a legal reason to do so","risk":3,"spdx":"","trademark":0,"unique_id":"6366c41d-8046-4b57-9c01-e550996af9ce"}
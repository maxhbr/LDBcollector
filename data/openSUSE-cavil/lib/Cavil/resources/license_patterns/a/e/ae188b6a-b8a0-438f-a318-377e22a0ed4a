{"export_restricted":0,"license":"LGPL-2.0+","packname":"","patent":0,"pattern":"Library, but is designed to work with the Library by being\ncompiled or linked with it, is called a \"work that uses the\nLibrary\".  Such a work, in isolation, is not a derivative work\nof the Library, and therefore falls outside the scope of this\nLicense.\n\nHowever, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library\n(because it contains portions of the Library), rather than a\n\"work that uses the library\".  The executable is therefore\ncovered by this License. Section 6 states terms for distribution\nof such executables.\n\nWhen a \"work that uses the Library\" uses material from a header\nfile that is part of the Library, the object code for the work\nmay be a derivative work of the Library even though the source\ncode is not. Whether this is true is especially significant if\nthe work can be linked without the Library, or if the work is\nitself a library.  The threshold for this to be true is not\nprecisely defined by law.\n\nIf such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small\ninline functions (ten lines or less in length), then the use of\nthe object file is unrestricted, regardless of whether it is\nlegally a derivative work.  (Executables containing this object\ncode plus portions of the Library will still fall under Section\n6","risk":1,"spdx":"LGPL-2.0-or-later","trademark":0,"unique_id":"ae188b6a-b8a0-438f-a318-377e22a0ed4a"}
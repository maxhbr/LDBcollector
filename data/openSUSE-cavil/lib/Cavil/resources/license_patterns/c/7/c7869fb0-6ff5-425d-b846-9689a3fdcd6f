{"export_restricted":0,"license":"Any permissive doc nomod","packname":"","patent":0,"pattern":"Why Free Software Needs Free Documentation\n******************************************\n\nThis essay was originally published on <http:\/\/gnu.org>, in 1996.\n\nThis document is part of GNU philosophy, the GNU Project's exhaustive\ncollection of articles and essays about free software and related\nmatters.\n\n   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n2005, 2006, 2007, 2009 Free Software Foundation, Inc.\n\n     Verbatim copying and distribution of this entire document are\n     permitted worldwide, without royalty, in any medium, provided this\n     notice is preserved.\n\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n\nThe biggest deficiency in free operating systems is not in the\nsoftware--it is the lack of good free manuals that we can include in\nthese systems.  Many of our most important programs do not come with\nfull manuals.  Documentation is an essential part of any software\npackage; when an important free software package does not come with a\nfree manual, that is a major gap.  We have many such gaps today.\n\n   Once upon a time, many years ago, I thought I would learn Perl.  I\ngot a copy of a free manual, but I found it hard to read.  When I asked\nPerl users about alternatives, they told me that there were better\nintroductory manuals--but those were not free.\n\n   Why was this?  The authors of the good manuals had written them for\nO'Reilly Associates, which published them with restrictive terms--no\ncopying, no modification, source files not available--which exclude them\nfrom the free software community.\n\n   That wasn't the first time this sort of thing has happened, and (to\nour community's great loss) it was far from the last.  Proprietary\nmanual publishers have enticed a great many authors to restrict their\nmanuals since then.  Many times I have heard a GNU user eagerly tell me\nabout a manual that he is writing, with which he expects to help the GNU\nProject--and then had my hopes dashed, as he proceeded to explain that\nhe had signed a contract with a publisher that would restrict it so that\nwe cannot use it.\n\n   Given that writing good English is a rare skill among programmers, we\ncan ill afford to lose manuals this way.\n\n   Free documentation, like free software, is a matter of freedom, not\nprice.  The problem with these manuals was not that O'Reilly Associates\ncharged a price for printed copies--that in itself is fine.  (The Free\nSoftware Foundation sells printed copies of free GNU manuals, too.)  But\nGNU manuals are available in source code form, while these manuals are\navailable only on paper.  GNU manuals come with permission to copy and\nmodify; the Perl manuals do not.  These restrictions are the problems.\n\n   The criterion for a free manual is pretty much the same as for free\nsoftware: it is a matter of giving all users certain freedoms.\nRedistribution (including commercial redistribution) must be permitted,\nso that the manual can accompany every copy of the program, on line or\non paper.  Permission for modification is crucial too.\n\n   As a general rule, I don't believe that it is essential for people to\nhave permission to modify all sorts of articles and books.  The issues\nfor writings are not necessarily the same as those for software.  For\nexample, I don't think you or I are obliged to give permission to modify\narticles like this one, which describe our actions and our views.\n\n   But there is a particular reason why the freedom to modify is crucial\nfor documentation for free software.  When people exercise their right\nto modify the software, and add or change its features, if they are\nconscientious they will change the manual too--so they can provide\naccurate and usable documentation with the modified program.  A manual\nwhich forbids programmers from being conscientious and finishing the\njob, or more precisely requires them to write a new manual from scratch\nif they change the program, does not fill our community's needs.\n\n   While a blanket prohibition on modification is unacceptable, some\nkinds of limits on the method of modification pose no problem.  For\nexample, requirements to preserve the original author's copyright\nnotice, the distribution terms, or the list of authors, are OK.  It is\nalso no problem to require modified versions to include notice that they\nwere modified, even to have entire sections that may not be deleted or\nchanged, as long as these sections deal with nontechnical topics.  (Some\nGNU manuals have them.)\n\n   These kinds of restrictions are not a problem because, as a practical\nmatter, they don't stop the conscientious programmer from adapting the\nmanual to fit the modified program.  In other words, they don't block\nthe free software community from making full use of the manual.\n\n   However, it must be possible to modify all the _technical_ content of\nthe manual, and then distribute the result through all the usual media,\nthrough all the usual channels; otherwise, the restrictions do block the\ncommunity, the manual is not free, and so we need another manual.\n\n   Unfortunately, it is often hard to find someone to write another\nmanual when a proprietary manual exists.  The obstacle is that many\nusers think that a proprietary manual is good enough--so they don't see\nthe need to write a free manual.  They do not see that the free\noperating system has a gap that needs filling.\n\n   Why do users think that proprietary manuals are good enough?  Some\nhave not considered the issue.  I hope this article will do something to\nchange that.\n\n   Other users consider proprietary manuals acceptable for the same\nreason so many people consider proprietary software acceptable: they\njudge in purely practical terms, not using freedom as a criterion.\nThese people are entitled to their opinions, but since those opinions\nspring from values which do not include freedom, they are no guide for\nthose of us who do value freedom.\n\n   Please spread the word about this issue.  We continue to lose manuals\nto proprietary publishing.  If we spread the word that proprietary\nmanuals are not sufficient, perhaps the next person who wants to help\nGNU by writing documentation will realize, before it is too late, that\nhe must above all make it free.\n\n   We can also encourage commercial publishers to sell free, copylefted\nmanuals instead of proprietary ones.  One way you can help this is to\ncheck the distribution terms of a manual before you buy it, and prefer\ncopylefted manuals to noncopylefted ones","risk":2,"spdx":"","trademark":0,"unique_id":"c7869fb0-6ff5-425d-b846-9689a3fdcd6f"}
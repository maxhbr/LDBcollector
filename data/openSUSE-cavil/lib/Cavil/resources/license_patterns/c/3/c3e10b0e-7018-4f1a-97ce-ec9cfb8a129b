{"export_restricted":0,"license":"GPL-2.0","packname":"kdegraphics3","patent":1,"pattern":"C- | Copyright (c) $SKIP19 All Rights Reserved.\n\/\/C- | The DjVu Reference Library is protected by U.S. Pat. No.\n\/\/C- | 6,058,214 and patents pending.\n\/\/C- |\n\/\/C- | This software is subject to, and may be distributed under, the\n\/\/C- | GNU General Public License, Version 2. The license should have\n\/\/C- | accompanied the software or you may obtain a copy of the license\n\/\/C- | from the Free Software Foundation at http:\/\/www.fsf.org .\n\/\/C- |\n\/\/C- | The computer code originally released by LizardTech under this\n\/\/C- | license and unmodified by other parties is deemed \"the LIZARDTECH\n\/\/C- | ORIGINAL CODE.\"  Subject to any third party intellectual property\n\/\/C- | claims, LizardTech grants recipient a worldwide, royalty-free, \n\/\/C- | non-exclusive license to make, use, sell, or otherwise dispose of \n\/\/C- | the LIZARDTECH ORIGINAL CODE or of programs derived from the \n\/\/C- | LIZARDTECH ORIGINAL CODE in compliance with the terms of the GNU \n\/\/C- | General Public License.   This grant only confers the right to \n\/\/C- | infringe patent claims underlying the LIZARDTECH ORIGINAL CODE to \n\/\/C- | the extent such infringement is reasonably necessary to enable \n\/\/C- | recipient to make, have made, practice, sell, or otherwise dispose \n\/\/C- | of the LIZARDTECH ORIGINAL CODE (or portions thereof) and not to \n\/\/C- | any greater extent that may be necessary to utilize further \n\/\/C- | modifications or combinations.\n\/\/C- |\n\/\/C- | The LIZARDTECH ORIGINAL CODE is provided \"AS IS\" WITHOUT WARRANTY\n\/\/C- | OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n\/\/C- | TO ANY WARRANTY OF NON-INFRINGEMENT, OR ANY IMPLIED WARRANTY OF\n\/\/C- | MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n\/\/C- +------------------------------------------------------------------\n\/\/ \n\/\/ $Id: Arrays.h,v 1.10 2004\/05\/13 15:16:34 leonb Exp $\n\/\/ $Name: release_3_5_15 $\n\n#ifndef _ARRAYS_H_\n#define _ARRAYS_H_\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n#if NEED_GNUG_PRAGMAS\n# pragma interface\n#endif\n\n#include \"GException.h\"\n#include \"GSmartPointer.h\"\n#include <string.h>\n\n#ifdef HAVE_NAMESPACES\nnamespace DJVU {\n# ifdef NOT_DEFINED \/\/ Just to fool emacs c++ mode\n}\n#endif\n#endif\n\n\n\n\/** @name Arrays.h\n\n    Files #\"Arrays.h\"# and #\"Arrays.cpp\"# implement three array template classes.\n    Class \\Ref{TArray} implements an array of objects of trivial types\n    such as #char#, #int#, #float#, etc. It is faster than general implementation\n    for any type done in \\Ref{DArray} because it does not cope with\n    element's constructors, destructors and copy operators. Although\n    implemented as a template, which makes it possible to incorrectly use\n    \\Ref{TArray} with non-trivial classes, it should not be done.\n\n    A lot of things is shared by these three arrays. That is why there are\n    more base classes:\n    \\begin{itemize}\n       \\item \\Ref{ArrayBase} defines functions independent of the elements type\n       \\item \\Ref{ArrayBaseT} template class defining functions shared by\n             \\Ref{DArray} and \\Ref{TArray}\n    \\end{itemize}\n\n    The main difference between \\Ref{GArray} (now obsolete) and these ones\n    is the copy-on-demand strategy, which allows you to copy array objects\n    without copying the real data. It's the same thing, which has been\n    implemented in \\Ref{GString} long ago: as long as you don't try to modify","risk":2,"spdx":"GPL-2.0-only","trademark":0,"unique_id":"c3e10b0e-7018-4f1a-97ce-ec9cfb8a129b"}
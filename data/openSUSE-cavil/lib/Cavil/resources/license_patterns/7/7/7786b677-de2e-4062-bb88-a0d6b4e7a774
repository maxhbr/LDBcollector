{"export_restricted":0,"license":"MPL-1.0 OR LGPL-2.1+","packname":"zziplib","patent":0,"pattern":"h2> COPYING - license information <\/h2> the public license terms\n\n<P>\n  The zziplib is a small library that allows for some parts of\n  obfuscation. This is very handy in commercial projects which tend\n  to incorporate a copy into their source tree. And with \n  <a href=\"zzip-xor.htm\">obfuscation<\/a> it is often advisable \n  to staticlink the zziplib part and `strip` the symbols from \n  the resulting binary - in order to obfuscate the usage of a \n  standard library for semi-`encryption` of data files.\n<\/P>\n\n<P>\n  In the past I have been modifying the original LGPL license\n  with a text that allows staticlinking thereby taking over a\n  few paragraphs from the MPL as restrictions to do so, just to \n  defend against improper usage. However I kept being asked \n  legalese questions since most people do not want to interpret \n  added text either and on their own without a lawyer. However\n  that accounts to me as well.\n<\/P>\n<P>\n  The public license(s) are simply there to protect me and\n  my work, none of this is fixed and it is neither the only  \n  possible way to get hold of a proper license. You can \n  always contact me to negotiate a special one if you do \n  need so. In most cases I will just say okay and you get \n  it for free, perhaps after some presentations I will \n  ask for som tax-reductable compensation sent to\n  a wellfare organisation (never me!).\n<\/P>\n<P>\n  A last hint from a friend did make me think as well, as\n  that the whole point of using standard public licenses\n  is to protect against the need to use your own lawyers\n  in the case that someone breaks the license rules. If\n  one uses a standard license then it is in the interest\n  of that big organization XY that the license will be\n  enforced and that it will be shown valid in all courts.\n  At the time of writing, no opensource license has\n  ever been discussed to an end in a court trial.\n<\/P>\n<P>\n  That's why at last, I decided to change the COPYING \n  details once again - and start shipping under a dual\n  MPL \/ LGPL license where each of them is separate \n  and restrictions apply alternatively. Remember that \n  each license is non-exclusive anyway, and I can give\n  out as many licenses as I want, here we have one as\n  MPL, then we have one as LGPL, and perhaps you ask me\n  for a third text to send you over. The public ones\n  are just there for you as a free choice which you can\n  pick without negotiations or a fee.\n<\/P>\n<P>\n  And yes, you will be on established legal grounds as \n  long as you restrict your usage of the library to the \n  details contained in either COPYING text. And better\n  yet, the legal possibilities have been discussed\n  a few hundred times before. You will surely find\n  good answers on the internet as well to guide you\n  to decisions in your company whether zziplib may\n  be adopted for a specific task.\n<\/P>\n<P>\n  The sources themselves are sent out under a dual license, \n  with both MPL and LGPL license options, and as long as \n  the MPL part is  not removed then the recpient of some\n  modified sources will be entitled to the same choice\n  among the public licenses of LGPL \/ MPL. Note that some\n  example sources are given away under the ZLIB license\n  which is nothing more than asking for nice behavior \n  which should have been the case even without such a text.\n  <small><small>(However, it is just a fact that some people \n  happen to behave anti-social especially under pressure of \n  capitalist needs, said to lower the risks for commercial \n  success\/failure of a company. You have to enforce good\n  behavior or it will be \"forgotten\". With a license it is\n  not just an error, it is a risk in itself to forget about it)\n  <\/small><\/small>\n<\/P>\n<P>\n  As for staticlinking, let us explore that a bit - there has \n  been a debate that the LGPL warrants in fact the freedom of \n  the final recipient as you must give him the original or \n  modified sources of zziplib, to allow them to modify that \n  part again, and then (re-)link to your own parts. Your own\n  parts may come in the form of precompiled objects without\n  sources (as opposed to the GPL restrictions). In here, it\n  is simply easier to use a dynamic linker that does the \n  re-linking job at startup-time of the whole project instead \n  to provide a makefile and linkage descriptions to let the\n  user do the staticlink it into a combined executable object. \n  The latter however is often needed for embedded environments\n  and it is quite of the original motivation to ask for a\n  staticlink option where in fact the LGPL does allow it anyway\n  as long as you ship all parts separatly as well.\n<\/P>\n\n<P>\n  The MPL defines the area of a combined work a bit differently,\n  in a way it derives some ideas from BSD'ish licenses. This\n  part does more care to protect the `Intellectual Properties`\n  of the original developers. It does ask to prominently show \n  off that you have gone to link with the work of someone else \n  in your project. Take special note of <em>\"3.5 Required Notices\"<\/em>, \n  <em>\"3.6 Distribution of Executable Versions\"<\/em> and\n  <em>\"3.7 Larger Works\"<\/em> here. Or read a lawyer text on\n  the legal result of the whole license","risk":1,"spdx":"MPL-1.0 OR LGPL-2.1-or-later","trademark":0,"unique_id":"7786b677-de2e-4062-bb88-a0d6b4e7a774"}
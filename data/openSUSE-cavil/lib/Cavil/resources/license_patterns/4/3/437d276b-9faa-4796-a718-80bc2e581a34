{"export_restricted":0,"license":"Any permissive adv","packname":"","patent":0,"pattern":"Permission to use, copy, modify, and\n * distribute this software and its documentation for any purpose and\n * without fee is hereby granted, provided that the above copyright\n * notice appear in all copies and that both that copyright notice and\n * this permission notice appear in supporting documentation.\n * $SKIP5 makes no representations about the suitability of\n * this software for any purpose.  It is provided \"as is\" without express\n * or implied warranty.\n *\/\n\n#ifndef K5STREAM_H\n#define K5STREAM_H\n\ntypedef struct kstream_int {                    \/* Object we pass around *\/\n  int fd;                                       \/* Open socket descriptor *\/\n  int (*encrypt)(struct kstream_data_block *, \/* output *\/\n\t\t struct kstream_data_block *, \/* input *\/\n\t\t struct kstream *kstream);\n  int (*decrypt)(struct kstream_data_block *, \/* output *\/\n\t\t struct kstream_data_block *, \/* input *\/\n\t\t struct kstream *kstream);\n} *kstream;\n\ntypedef void *kstream_ptr;                      \/* Data send on the kstream *\/\n\nstruct kstream_data_block {\n  kstream_ptr ptr;\n  size_t length;\n};\n\nstruct kstream_crypt_ctl_block {\n  int (*encrypt)(struct kstream_data_block *, \/* output *\/\n\t\t struct kstream_data_block *, \/* input *\/\n\t\t kstream);\n  int (*decrypt)(struct kstream_data_block *, \/* output *\/\n\t\t struct kstream_data_block *, \/* input *\/\n\t\t kstream);\n  int (*init)(kstream, kstream_ptr);\n  void (*destroy)(kstream);\n};\n\n\n\/* Prototypes *\/\n\nint kstream_destroy(kstream);\nvoid kstream_set_buffer_mode(kstream, int);\nkstream kstream_create_from_fd(int fd,\n\t\t\t       const struct kstream_crypt_ctl_block *,\n\t\t\t       kstream_ptr);\nint kstream_write(kstream, void *, size_t);\nint kstream_read(kstream, void *, size_t);\n\n#endif \/* K5STREAM_H","risk":4,"spdx":"","trademark":0,"unique_id":"437d276b-9faa-4796-a718-80bc2e581a34"}
{
    "swagger": "2.0",
    "info": {
        "description": "Service to host license information for other services to query over REST API.",
        "title": "laas (License as a Service) API",
        "contact": {
            "name": "FOSSology",
            "url": "https://fossology.org",
            "email": "fossology@fossology.org"
        },
        "license": {
            "name": "GPL-2.0-only",
            "url": "https://github.com/fossology/LicenseDb/blob/main/LICENSE"
        },
        "version": "0.0.9"
    },
    "basePath": "/api/v1",
    "paths": {
        "/audits": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all audit records from the server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audits"
                ],
                "summary": "Get audit records",
                "operationId": "GetAllAudit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit records",
                        "schema": {
                            "$ref": "#/definitions/models.AuditResponse"
                        }
                    },
                    "404": {
                        "description": "Not changelogs in DB",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/audits/{audit_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a specific audit records by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audits"
                ],
                "summary": "Get an audit record",
                "operationId": "GetAudit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Audit ID",
                        "name": "audit_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuditResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid audit ID",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "404": {
                        "description": "No audit entry with given ID",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/audits/{audit_id}/changes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get changelogs of an audit record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audits"
                ],
                "summary": "Get changelogs",
                "operationId": "GetChangeLogs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Audit ID",
                        "name": "audit_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ChangeLogResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid audit ID",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "404": {
                        "description": "No audit entry with given ID",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "500": {
                        "description": "unable to find changes",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/audits/{audit_id}/changes/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a specific changelog of an audit record by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audits"
                ],
                "summary": "Get a changelog",
                "operationId": "GetChangeLogbyId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Audit ID",
                        "name": "audit_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Changelog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ChangeLogResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "404": {
                        "description": "No changelog with given ID found",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check health of the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Check health",
                "operationId": "getHealth",
                "responses": {
                    "200": {
                        "description": "Heath is OK",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "500": {
                        "description": "Connection to DB failed",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/licenses": {
            "get": {
                "description": "Filter licenses based on different parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Licenses"
                ],
                "summary": "Filter licenses",
                "operationId": "FilterLicense",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SPDX ID of the license",
                        "name": "spdxid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "License detector type",
                        "name": "detector_type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "GPLv2 compatibility flag status of license",
                        "name": "gplv2compatible",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "GPLv3 compatibility flag status of license",
                        "name": "gplv3compatible",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Mary done flag status of license",
                        "name": "marydone",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Active license only",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "OSI Approved flag status of license",
                        "name": "osiapproved",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "FSF Free flag status of license",
                        "name": "fsffree",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Copyleft flag status of license",
                        "name": "copyleft",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of responses per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "External reference parameters",
                        "name": "externalRef",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered licenses",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid value",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new license in the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Licenses"
                ],
                "summary": "Create a new license",
                "operationId": "CreateLicense",
                "parameters": [
                    {
                        "description": "New license to be created",
                        "name": "license",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LicenseInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "New license created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "409": {
                        "description": "License with same shortname already exists",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "500": {
                        "description": "Failed to create license",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/licenses/{shortname}": {
            "get": {
                "description": "Get a single license by its shortname",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Licenses"
                ],
                "summary": "Get a license by shortname",
                "operationId": "GetLicense",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortname of the license",
                        "name": "shortname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseResponse"
                        }
                    },
                    "404": {
                        "description": "License with shortname not found",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a license in the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Licenses"
                ],
                "summary": "Update a license",
                "operationId": "UpdateLicense",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortname of the license to be updated",
                        "name": "shortname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update license body (requires only the fields to be updated)",
                        "name": "license",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LicenseUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "License updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid license body",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "404": {
                        "description": "License with shortname not found",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "409": {
                        "description": "License with same shortname already exists",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "500": {
                        "description": "Failed to update license",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login to get JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login",
                "operationId": "Login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obligation_maps/license/{license}": {
            "get": {
                "description": "Get obligation maps for a given license shortname",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Get maps for a license",
                "operationId": "GetObligationMapByLicense",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortname of the license",
                        "name": "license",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ObligationMapResponse"
                        }
                    },
                    "404": {
                        "description": "No license with given shortname found or no map for",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/obligation_maps/topic/{topic}": {
            "get": {
                "description": "Get obligation maps for a given obligation topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Get maps for an obligation",
                "operationId": "GetObligationMapByTopic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic of the obligation",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ObligationMapResponse"
                        }
                    },
                    "404": {
                        "description": "No obligation with given topic found or no map for",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/obligation_maps/topic/{topic}/license": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Replaces the license list of an obligation topic with the given list in the obligation map.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Change license list",
                "operationId": "UpdateLicenseInObligationMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic of the obligation",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shortnames of the licenses to be in map",
                        "name": "shortnames",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LicenseShortnamesInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ObligationMapResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid json body",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "404": {
                        "description": "No license or obligation found.",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add or remove licenses from obligation map for a given obligation topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Add or remove licenses from obligation map",
                "operationId": "PatchObligationMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic of the obligation",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shortnames of the licenses with action",
                        "name": "shortname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LicenseMapShortnamesInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ObligationMapResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid json body",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "404": {
                        "description": "No license or obligation found.",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "500": {
                        "description": "Failure to insert new maps",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/obligations": {
            "get": {
                "description": "Get all active obligations from the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Get all active obligations",
                "operationId": "GetAllObligation",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Active obligation only",
                        "name": "active",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ObligationResponse"
                        }
                    },
                    "404": {
                        "description": "No obligations in DB",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create an obligation and associate it with licenses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Create an obligation",
                "operationId": "CreateObligation",
                "parameters": [
                    {
                        "description": "Obligation to create",
                        "name": "obligation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObligationPOSTRequestJSONSchema"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ObligationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request body",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "409": {
                        "description": "Obligation with same body exists",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "500": {
                        "description": "Unable to create obligation",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/obligations/import": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Import obligations by uploading a json file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Import obligations by uploading a json file",
                "operationId": "ImportObligations",
                "parameters": [
                    {
                        "type": "file",
                        "description": "obligations json file list",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.ImportObligationsResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ObligationImportStatus"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "input file must be present",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/obligations/{topic}": {
            "get": {
                "description": "Get an active based on given topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Get an obligation",
                "operationId": "GetObligation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic of the obligation",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ObligationResponse"
                        }
                    },
                    "404": {
                        "description": "No obligation with given topic found",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deactivate an obligation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Deactivate obligation",
                "operationId": "DeleteObligation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic of the obligation to be updated",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "No obligation with given topic found",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing obligation record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Update obligation",
                "operationId": "UpdateObligation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic of the obligation to be updated",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Obligation to be updated",
                        "name": "obligation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObligationPATCHRequestJSONSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ObligationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "404": {
                        "description": "No obligation with given topic found",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "500": {
                        "description": "Unable to update obligation",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/obligations/{topic}/audits": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches audits corresponding to an obligation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Obligations"
                ],
                "summary": "Fetches audits corresponding to an obligation",
                "operationId": "GetObligationAudits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic of the obligation for which audits need to be fetched",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuditResponse"
                        }
                    },
                    "404": {
                        "description": "No obligation with given topic found",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "500": {
                        "description": "unable to find audits with such obligation topic",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/search": {
            "post": {
                "description": "Search licenses on different filters and algorithms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Licenses"
                ],
                "summary": "Search licenses",
                "operationId": "SearchInLicense",
                "parameters": [
                    {
                        "description": "Search criteria",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SearchLicense"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Licenses matched",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "404": {
                        "description": "Search algorithm doesn't exist",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all service users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get users",
                "operationId": "GetAllUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Users not found",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new service user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "operationId": "CreateUser",
                "parameters": [
                    {
                        "description": "User to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid json body",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a single user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user",
                "operationId": "GetUser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user id",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models.LicenseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "datatypes.JSONType-models_LicenseDBSchemaExtension": {
            "type": "object"
        },
        "models.Audit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 456
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-12-01T18:10:25.00+05:30"
                },
                "type": {
                    "type": "string",
                    "example": "license"
                },
                "type_id": {
                    "type": "integer",
                    "example": 34
                },
                "user_id": {
                    "type": "integer",
                    "example": 123
                }
            }
        },
        "models.AuditResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Audit"
                    }
                },
                "paginationmeta": {
                    "$ref": "#/definitions/models.PaginationMeta"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "models.ChangeLog": {
            "type": "object",
            "properties": {
                "audit_id": {
                    "type": "integer",
                    "example": 456
                },
                "field": {
                    "type": "string",
                    "example": "rf_text"
                },
                "id": {
                    "type": "integer",
                    "example": 789
                },
                "old_value": {
                    "type": "string",
                    "example": "Old license text"
                },
                "updated_value": {
                    "type": "string",
                    "example": "New license text"
                }
            }
        },
        "models.ChangeLogResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ChangeLog"
                    }
                },
                "paginationmeta": {
                    "$ref": "#/definitions/models.PaginationMeta"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "models.ImportObligationsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "can be of type models.LicenseError or models.ObligationImportStatus",
                    "type": "array",
                    "items": {}
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "models.LicenseDB": {
            "type": "object",
            "required": [
                "rf_shortname"
            ],
            "properties": {
                "external_ref": {
                    "$ref": "#/definitions/datatypes.JSONType-models_LicenseDBSchemaExtension"
                },
                "marydone": {
                    "type": "boolean"
                },
                "rf_FSFfree": {
                    "type": "boolean"
                },
                "rf_Fedora": {
                    "type": "string"
                },
                "rf_GPLv2compatible": {
                    "type": "boolean"
                },
                "rf_GPLv3compatible": {
                    "type": "boolean"
                },
                "rf_OSIapproved": {
                    "type": "boolean"
                },
                "rf_active": {
                    "type": "boolean"
                },
                "rf_add_date": {
                    "type": "string",
                    "example": "2023-12-01T18:10:25.00+05:30"
                },
                "rf_copyleft": {
                    "type": "boolean"
                },
                "rf_detector_type": {
                    "type": "integer",
                    "example": 1
                },
                "rf_flag": {
                    "type": "integer",
                    "example": 1
                },
                "rf_fullname": {
                    "type": "string",
                    "example": "MIT License"
                },
                "rf_id": {
                    "type": "integer",
                    "example": 123
                },
                "rf_notes": {
                    "type": "string",
                    "example": "This license has been superseded."
                },
                "rf_risk": {
                    "type": "integer"
                },
                "rf_shortname": {
                    "type": "string",
                    "example": "MIT"
                },
                "rf_source": {
                    "type": "string"
                },
                "rf_spdx_id": {
                    "type": "string",
                    "example": "MIT"
                },
                "rf_text": {
                    "type": "string",
                    "example": "MIT License Text here"
                },
                "rf_text_updatable": {
                    "type": "boolean"
                },
                "rf_url": {
                    "type": "string",
                    "example": "https://opensource.org/licenses/MIT"
                }
            }
        },
        "models.LicenseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid request body"
                },
                "message": {
                    "type": "string",
                    "example": "invalid request body"
                },
                "path": {
                    "type": "string",
                    "example": "/api/v1/licenses"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-12-01T10:00:51+05:30"
                }
            }
        },
        "models.LicenseInput": {
            "type": "object",
            "properties": {
                "external_ref": {
                    "$ref": "#/definitions/datatypes.JSONType-models_LicenseDBSchemaExtension"
                },
                "marydone": {
                    "type": "boolean"
                },
                "rf_FSFfree": {
                    "type": "boolean"
                },
                "rf_Fedora": {
                    "type": "string"
                },
                "rf_GPLv2compatible": {
                    "type": "boolean"
                },
                "rf_GPLv3compatible": {
                    "type": "boolean"
                },
                "rf_OSIapproved": {
                    "type": "boolean"
                },
                "rf_active": {
                    "type": "boolean"
                },
                "rf_add_date": {
                    "type": "string",
                    "example": "2023-12-01T18:10:25.00+05:30"
                },
                "rf_copyleft": {
                    "type": "boolean"
                },
                "rf_detector_type": {
                    "type": "integer",
                    "example": 1
                },
                "rf_flag": {
                    "type": "integer",
                    "example": 1
                },
                "rf_fullname": {
                    "type": "string",
                    "example": "MIT License"
                },
                "rf_notes": {
                    "type": "string",
                    "example": "This license has been superseded."
                },
                "rf_risk": {
                    "type": "integer"
                },
                "rf_shortname": {
                    "type": "string",
                    "example": "MIT"
                },
                "rf_source": {
                    "type": "string"
                },
                "rf_spdx_id": {
                    "type": "string",
                    "example": "MIT"
                },
                "rf_text": {
                    "type": "string",
                    "example": "MIT License Text here"
                },
                "rf_text_updatable": {
                    "type": "boolean"
                },
                "rf_url": {
                    "type": "string",
                    "example": "https://opensource.org/licenses/MIT"
                }
            }
        },
        "models.LicenseMapShortnamesElement": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "boolean",
                    "example": true
                },
                "shortname": {
                    "type": "string",
                    "example": "GPL-2.0-only"
                }
            }
        },
        "models.LicenseMapShortnamesInput": {
            "type": "object",
            "properties": {
                "map": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.LicenseMapShortnamesElement"
                    }
                }
            }
        },
        "models.LicenseResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.LicenseDB"
                    }
                },
                "paginationmeta": {
                    "$ref": "#/definitions/models.PaginationMeta"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "models.LicenseShortnamesInput": {
            "type": "object",
            "properties": {
                "shortnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "GPL-2.0-only",
                        "GPL-2.0-or-later"
                    ]
                }
            }
        },
        "models.LicenseUpdate": {
            "type": "object",
            "properties": {
                "marydone": {
                    "type": "boolean"
                },
                "rf_FSFfree": {
                    "type": "boolean"
                },
                "rf_Fedora": {
                    "type": "string"
                },
                "rf_GPLv2compatible": {
                    "type": "boolean"
                },
                "rf_GPLv3compatible": {
                    "type": "boolean"
                },
                "rf_OSIapproved": {
                    "type": "boolean"
                },
                "rf_active": {
                    "type": "boolean"
                },
                "rf_add_date": {
                    "type": "string",
                    "example": "2023-12-01T18:10:25.00+05:30"
                },
                "rf_copyleft": {
                    "type": "boolean"
                },
                "rf_detector_type": {
                    "type": "integer",
                    "example": 1
                },
                "rf_flag": {
                    "type": "integer",
                    "example": 1
                },
                "rf_fullname": {
                    "type": "string",
                    "example": "MIT License"
                },
                "rf_notes": {
                    "type": "string",
                    "example": "This license has been superseded."
                },
                "rf_risk": {
                    "type": "integer"
                },
                "rf_source": {
                    "type": "string"
                },
                "rf_spdx_id": {
                    "type": "string",
                    "example": "MIT"
                },
                "rf_text": {
                    "type": "string",
                    "example": "MIT License Text here"
                },
                "rf_text_updatable": {
                    "type": "boolean"
                },
                "rf_url": {
                    "type": "string",
                    "example": "https://opensource.org/licenses/MIT"
                }
            }
        },
        "models.Obligation": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "classification": {
                    "type": "string",
                    "enum": [
                        "green",
                        "white",
                        "yellow",
                        "red"
                    ],
                    "example": "green"
                },
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 147
                },
                "modifications": {
                    "type": "boolean",
                    "example": true
                },
                "text": {
                    "type": "string",
                    "example": "Source code be made available when distributing the software."
                },
                "text_updatable": {
                    "type": "boolean",
                    "example": true
                },
                "topic": {
                    "type": "string",
                    "example": "copyleft"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "obligation",
                        "restriction",
                        "risk",
                        "right"
                    ],
                    "example": "risk"
                }
            }
        },
        "models.ObligationId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 31
                },
                "topic": {
                    "type": "string",
                    "example": "copyleft"
                }
            }
        },
        "models.ObligationImportStatus": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ObligationId"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "models.ObligationMapResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ObligationMapUser"
                    }
                },
                "paginationmeta": {
                    "$ref": "#/definitions/models.PaginationMeta"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "models.ObligationMapUser": {
            "type": "object",
            "properties": {
                "shortnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "GPL-2.0-only",
                        "GPL-2.0-or-later"
                    ]
                },
                "topic": {
                    "type": "string",
                    "example": "copyleft"
                }
            }
        },
        "models.ObligationPATCHRequestJSONSchema": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "classification": {
                    "type": "string",
                    "enum": [
                        "green",
                        "white",
                        "yellow",
                        "red"
                    ]
                },
                "comment": {
                    "type": "string",
                    "example": "This is a comment."
                },
                "modifications": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string",
                    "example": "Source code be made available when distributing the software."
                },
                "text_updatable": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "obligation",
                        "restriction",
                        "risk",
                        "right"
                    ]
                }
            }
        },
        "models.ObligationPOSTRequestJSONSchema": {
            "type": "object",
            "required": [
                "active",
                "classification",
                "comment",
                "modifications",
                "shortnames",
                "text",
                "topic",
                "type"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "classification": {
                    "type": "string",
                    "enum": [
                        "green",
                        "white",
                        "yellow",
                        "red"
                    ]
                },
                "comment": {
                    "type": "string"
                },
                "modifications": {
                    "type": "boolean"
                },
                "shortnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "GPL-2.0-only",
                        "GPL-2.0-or-later"
                    ]
                },
                "text": {
                    "type": "string",
                    "example": "Source code be made available when distributing the software."
                },
                "topic": {
                    "type": "string",
                    "example": "copyleft"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "obligation",
                        "restriction",
                        "risk",
                        "right"
                    ]
                }
            }
        },
        "models.ObligationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Obligation"
                    }
                },
                "paginationmeta": {
                    "$ref": "#/definitions/models.PaginationMeta"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "models.PaginationMeta": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "next": {
                    "type": "string",
                    "example": "/api/v1/licenses?limit=10\u0026page=11"
                },
                "page": {
                    "type": "integer",
                    "example": 10
                },
                "previous": {
                    "type": "string",
                    "example": "/api/v1/licenses?limit=10\u0026page=9"
                },
                "resource_count": {
                    "type": "integer",
                    "example": 200
                },
                "total_pages": {
                    "type": "integer",
                    "example": 20
                }
            }
        },
        "models.SearchLicense": {
            "type": "object",
            "required": [
                "field",
                "search_term"
            ],
            "properties": {
                "field": {
                    "type": "string",
                    "example": "rf_text"
                },
                "search": {
                    "type": "string",
                    "enum": [
                        "fuzzy",
                        "full_text_search"
                    ]
                },
                "search_term": {
                    "type": "string",
                    "example": "MIT License"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "password",
                "userlevel",
                "username"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "password": {
                    "type": "string"
                },
                "userlevel": {
                    "type": "string",
                    "example": "admin"
                },
                "username": {
                    "type": "string",
                    "example": "fossy"
                }
            }
        },
        "models.UserInput": {
            "type": "object",
            "required": [
                "password",
                "userlevel",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "userlevel": {
                    "type": "string",
                    "example": "admin"
                },
                "username": {
                    "type": "string",
                    "example": "fossy"
                }
            }
        },
        "models.UserLogin": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "fossy"
                }
            }
        },
        "models.UserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "paginationmeta": {
                    "$ref": "#/definitions/models.PaginationMeta"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Token from /login endpoint",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}